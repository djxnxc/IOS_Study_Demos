//
//  DetailVCSubOne.m
//  MyVegetable
//
//  Created by mythkiven on 15/11/26.
//  Copyright © 2015年 yunhoo. All rights reserved.
//

#import "DetailVCSubOne.h"
#import "DetailModel.h"

#import "JMessageModel.h"
#import "JMessageFrameModel.h"
#import "JMessageCell.h"

@interface DetailVCSubOne ()<UITableViewDataSource,UITableViewDelegate,HZMAPIManagerDelegate>
@property (nonatomic, strong) NSMutableArray *data;
@property (nonatomic,strong) UITableView *tableView;
@end

@implementation DetailVCSubOne

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor =  RGB_gray;
   [self getdata];
#warning 测试数据
//    self.data = [NSMutableArray arrayWithArray:[self arr]];
    
    self.data = [NSMutableArray array];
    
    
    self.tableView= [[UITableView alloc] initWithFrame:self.view.frame style:UITableViewStylePlain];
    self.tableView.dataSource =self;
    self.tableView.delegate = self;
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    self.tableView.backgroundColor = RGB_gray;
    [self.view addSubview:self.tableView];
}
- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    [self getdata];
    
    if (From1(self)|From2(self)) {
        UIButton *backBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        backBtn.frame = CGRectMake(-2, 0, 12, 20);
        UIImage *buttonImage = [UIImage  imageNamed:@"back"];
        buttonImage = [buttonImage imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];
        [backBtn setImage:buttonImage forState:UIControlStateNormal];
        [backBtn addTarget:self action:@selector(backa) forControlEvents:UIControlEventTouchUpInside];
        UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithCustomView:backBtn];
        self.navigationItem.leftBarButtonItem = backItem;
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
- (void)viewDidAppear:(BOOL)animated {
    [super viewDidDisappear:animated];
    if (self.scrollNum) {
        if (self.scrollNum<2) {
            [self.view makeToast:@"数据较少，无法展示滚动效果-TEST效果"  duration:2.0f];
            return;
#warning Test
        }
        [self.tableView scrollToRowAtIndexPath:[NSIndexPath indexPathForRow:self.scrollNum inSection:0] atScrollPosition:UITableViewScrollPositionTop animated:YES];
    }
    
}
- (void)viewDidDisappear:(BOOL)animated {
    [super viewDidDisappear:animated];
    [self.tableView scrollToRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0] atScrollPosition:UITableViewScrollPositionTop animated:YES];
}
#pragma mark - Table view data source

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.data.count;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    // 1、创建cell
    JMessageCell *cell = [JMessageCell cellWithTableView:tableView isChange:NO];
    // 2、给cell传模型frame模型，首先进行frame的计算。然后进入view中。
    cell.backgroundColor = [UIColor clearColor];
    cell.messageFrame = self.data[indexPath.row];
    // 3、返回cell
    
    
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    JMessageFrameModel *mf = _data[indexPath.row];
    return mf.cellHeight;
}




#pragma mark - 网络
- (void)getdata {
    NSDictionary *dicParams =[NSDictionary dictionaryWithObjectsAndKeys:
                              _productId,@"productId",nil];
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    [[HZMAPImanager shareMAPImanager] addDelegate:self];
    HZMRequest *request =[[HZMRequest alloc] init];
    request.requsetId = FinancingCPXQdetail_NetWoring;
    request.requestParamDic = dicParams;
    request.callBackDelegate = self;
    request.tag = 0;
    [[HZMAPImanager shareMAPImanager] postWithWSRequest:request];
}
- (void)transactionFinished:(HZMResponse *)response {
    [MBProgressHUD hideHUDForView:self.view animated:YES];
    [[HZMAPImanager shareMAPImanager] removeDelegate:self];
    if ([response.requestId isEqualToString:FinancingCPXQdetail_NetWoring]) {
        if ([response.responseCodeOriginal isEqualToString:@"1"]) {
            if (self.data.count) {
                [self.data removeAllObjects];
            }
            NSDictionary *dict =[response.responseData objectForKey:@"data"];
            if (dict){
                if (self.pageNum == 0) {
                    NSDictionary *dic =[dict objectForKey:@"productDetail"];
                    if ([dic isKindOfClass:[NSDictionary class]]) {
                        JMessageModel *jmm = [[JMessageModel alloc]init];
                        jmm.title = dic[@"title"];
                        jmm.text = dic[@"content"];
                        // 添加数据：
                        JMessageFrameModel *jmf = [[JMessageFrameModel alloc] init];
                        jmf.messageModel = jmm;
                        [self.data addObject:jmf];
                    }
                    if ([dic isKindOfClass:[NSArray class]]) {
                        NSArray *arr = dic;
                        NSDictionary *dic = [arr objectAtIndex:0];
                        JMessageModel *jmm = [[JMessageModel alloc]init];
                        jmm.title = dic[@"title"];
                        jmm.text = dic[@"content"];
                        // 添加数据：
                        JMessageFrameModel *jmf = [[JMessageFrameModel alloc] init];
                        jmf.messageModel = jmm;
                        [self.data addObject:jmf];
                        
                    }
                    
                }
                if (self.pageNum == 1) {
                     NSDictionary *dic =[dict objectForKey:@"safetyDetail"];
                    if ([dic isKindOfClass:[NSDictionary class]]) {
                        JMessageModel *jmm = [[JMessageModel alloc]init];
                        jmm.title = dic[@"title"];
                        jmm.text = dic[@"content"];
                        // 添加数据：
                        JMessageFrameModel *jmf = [[JMessageFrameModel alloc] init];
                        jmf.messageModel = jmm;
                        [self.data addObject:jmf];
                    }
                    if ([dic isKindOfClass:[NSArray class]]) {
                        NSArray *arr = dic;
                        NSDictionary *dic = [arr objectAtIndex:0];
                        JMessageModel *jmm = [[JMessageModel alloc]init];
                        jmm.title = dic[@"title"];
                        jmm.text = dic[@"content"];
                        // 添加数据：
                        JMessageFrameModel *jmf = [[JMessageFrameModel alloc] init];
                        jmf.messageModel = jmm;
                        [self.data addObject:jmf];
                    }
                    
                }
                
            }
            
        }
        [self.tableView reloadData];
    }
}
- (void)transactionFailed:(HZMResponse *)response {
    [MBProgressHUD hideHUDForView:self.view animated:YES];
    if ([response.responseCodeOriginal isEqualToString:@"-1"]|[response.responseCodeOriginal isEqualToString:@"-2"]|[response.responseCodeOriginal isEqualToString:@"-3"]|[response.responseCodeOriginal isEqualToString:@"-4"]|[response.responseCodeOriginal isEqualToString:@"-5"]|[response.responseCodeOriginal isEqualToString:@"-6"]|[response.responseCodeOriginal isEqualToString:@"-99"]) {
        [self.view makeToast:[response.responseData objectForKey:@"message"] duration:1.5 position:@"center"];
    }else
        [self.view makeToast:response.responseMsg duration:1.5 position:@"center"];
    
    [[HZMAPImanager shareMAPImanager] removeDelegate:self];
}



#pragma mark -其他
- (NSArray *)arr {
    
    
    NSArray *arr  = @[@[@"银行托管",@"投资人资金由光大银行全程托管，资金去向明确可靠。"],
                      @[@"风险备付金",@"公司自有资金中划拨相应的起始资金存放于风险储备金账户中。平台每笔借款成交时，提取1%-5%的成交金额放入“风险备付金账户”。借款出现逾期时，则先启动“风险备用金”先行向投资人垫付此笔借款的剩余出借本息。"],
                      @[@"债权回购金",@"从公司自有资金中划拨一定数量的起始资金存放于债权回购金账户中。平台不定期补充或增加资金放入 “债权回购金账户”。若风险备付金不足以垫付或回购时，则启动“债权回购金”向投资人垫付此笔借款的剩余出借本息。"],
                      @[@"本息保障",@"中赢金融公司做连带责任担保，保证用户的资金安全。"],
                      @[@"账户资金交易安全",@"阳光财险保险公司对每笔交易承担保险责任，从充值、提现、投资、还款等各个环节全面保障投资者的资金安全，为你在我的菜理财的资金安全保驾护航，让您的投资更安全放心。"],@[@"银行托管",@"投资人资金由光大银行全程托管，资金去向明确可靠。"],
                      @[@"风险备付金",@"公司自有资金中划拨相应的起始资金存放于风险储备金账户中。平台每笔借款成交时，提取1%-5%的成交金额放入“风险备付金账户”。借款出现逾期时，则先启动“风险备用金”先行向投资人垫付此笔借款的剩余出借本息。"],
                      @[@"债权回购金",@"从公司自有资金中划拨一定数量的起始资金存放于债权回购金账户中。平台不定期补充或增加资金放入 “债权回购金账户”。若风险备付金不足以垫付或回购时，则启动“债权回购金”向投资人垫付此笔借款的剩余出借本息。"], @[@"风险备付金",@"公司自有资金中划拨相应的起始资金存放于风险储备金账户中。平台每笔借款成交时，提取1%-5%的成交金额放入“风险备付金账户”。借款出现逾期时，则先启动“风险备用金”先行向投资人垫付此笔借款的剩余出借本息。"],
                      @[@"债权回购金",@"从公司自有资金中划拨一定数量的起始资金存放于债权回购金账户中。平台不定期补充或增加资金放入 “债权回购金账户”。若风险备付金不足以垫付或回购时，则启动“债权回购金”向投资人垫付此笔借款的剩余出借本息。"], @[@"风险备付金",@"公司自有资金中划拨相应的起始资金存放于风险储备金账户中。平台每笔借款成交时，提取1%-5%的成交金额放入“风险备付金账户”。借款出现逾期时，则先启动“风险备用金”先行向投资人垫付此笔借款的剩余出借本息。"],
                      @[@"债权回购金",@"从公司自有资金中划拨一定数量的起始资金存放于债权回购金账户中。平台不定期补充或增加资金放入 “债权回购金账户”。若风险备付金不足以垫付或回购时，则启动“债权回购金”向投资人垫付此笔借款的剩余出借本息。"], @[@"风险备付金",@"公司自有资金中划拨相应的起始资金存放于风险储备金账户中。平台每笔借款成交时，提取1%-5%的成交金额放入“风险备付金账户”。借款出现逾期时，则先启动“风险备用金”先行向投资人垫付此笔借款的剩余出借本息。"],
                      @[@"债权回购金",@"从公司自有资金中划拨一定数量的起始资金存放于债权回购金账户中。平台不定期补充或增加资金放入 “债权回购金账户”。若风险备付金不足以垫付或回购时，则启动“债权回购金”向投资人垫付此笔借款的剩余出借本息。"]];
    
    
    NSMutableArray *mArr = [NSMutableArray array];
    for (NSArray *dict in arr) {
        // 消息模型：
        JMessageModel *jmm = [[JMessageModel alloc]init];
        jmm.title = dict[0];
        jmm.text = dict[1];
        // 添加数据：
        JMessageFrameModel *jmf = [[JMessageFrameModel alloc] init];
        jmf.messageModel = jmm;
        
        [mArr addObject:jmf];
    }
    return mArr;
}
#pragma mark  返回
- (void)backa{
    [self.navigationController popViewControllerAnimated:YES];
}

@end

